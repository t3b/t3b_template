/* ==========================================================
 * grid.scss
 *
 * Sets up the grid
 * DOCS:
 * ========================================================== */


/* =============================================================================
$ Variables
================================================================================ */
$columWidth:      ($layoutWidth + $columnGutter) / $totalColumns - $columnGutter !default;
$grid-direction:  $start;

/* =============================================================================
$ Grid Classes
================================================================================ */
// Base styles for .row .# classes
@if $direction == ltr {
  .columns {
    float: $grid-direction;
    margin: 0 $columnGutter / 2;
    &.first { margin-left: 0; }
    &.last { margin-right: 0; }
    &.centered { margin: 0 auto; float: none; }
  }
} @else {
  .columns {
    float: $grid-direction;
    margin: 0 $columnGutter / 2;
    &.first { margin-right: 0; }
    &.last { margin-left: 0; }
    &.centered { margin: 0 auto; float: none; }
  }
}

.row {
  // Creating .row .# classes
  @for $i from 1 through $totalColumns {
    .#{convert-number-to-word($i)} {
      width: gridCalc($i, $totalColumns);
    }
  }

  // Creating .row .offset-by-# classes
  @for $i from 1 through $totalColumns - 1 {
    .offset-by-#{convert-number-to-word($i)} {
      margin-left: gridCalc($i, $totalColumns) + ($columnGutter * 1.5);
    }
  }
}